# Default values for webtool-mailservice.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: akhilsurala/webtool-mailservice
  pullPolicy: Always
  tag: "latest" # CONSIDER using specific, immutable tags (e.g., "v1.0.0") for production

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: "mailservice-sa"

podAnnotations: {}
podLabels: {}

podSecurityContext: {} # Add security contexts here if needed, e.g., runAsNonRoot: true

securityContext: {} # Add container-specific security contexts here if needed

service:
  type: ClusterIP
  port: 8082 # This is the port the Kubernetes Service will listen on for internal traffic
            # It also dictates the containerPort in your deployment due to templating.

ingress:
  enabled: true
  className: "" # Specify your Ingress Controller class name if you have one (e.g., "nginx")
  annotations: {} # Add Ingress-specific annotations here (e.g., for cert-manager, rewrite rules)
  hosts:
    - host: sunseed.local # Change this to your actual domain name for production
      paths:
        - path: /api/webtool-mailservice # Ensure this path is correct for your application's API
          pathType: ImplementationSpecific # Can also be "Prefix" or "Exact"
  tls: [] # IMPORTANT: Configure TLS here for HTTPS in production (e.g., using cert-manager)

resources: {} # IMPORTANT: Define resource requests and limits for production environments
              # Example:
              # requests:
              #   memory: "128Mi"
              #   cpu: "100m"
              # limits:
              #   memory: "256Mi"
              #   cpu: "200m"

livenessProbe:
  httpGet:
    path: /actuator/health # Verify this is the correct health endpoint for your application
    port: 8082 # Must match the containerPort where the app listens
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /actuator/health # Verify this is the correct health endpoint for your application
    port: 8082 # Must match the containerPort where the app listens
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

volumes: []
volumeMounts: []

nodeSelector: {}

tolerations: []

affinity: {}

# Add the environment variables here
config:
  SPRING_MAIL_HOST: smtp.gmail.com
  SPRING_MAIL_PORT: "587"
  SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH: "true"
  SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE: "true"
  SPRING_PROFILES_ACTIVE: dev # Change to "prod" for production
